apply plugin: 'scala'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'eclipse-wtp'

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies {
        classpath 'bmuschko:gradle-tomcat-plugin:0.9.1'
    }
}

repositories {
    mavenCentral()
}


dependencies {
    // Libraries needed to run the scala tools
    scalaTools 'org.scala-lang:scala-compiler:2.9.2'
    scalaTools 'org.scala-lang:scala-library:2.9.2'

    // Libraries needed for scala api
    compile 'org.scala-lang:scala-library:2.9.2'
	
	// Spring MVC
	compile 'org.springframework:spring-webmvc:3.1.1.RELEASE'
	providedCompile  'javax:javaee-api:6.0'
    
	// templating
	compile('org.fusesource.scalate:scalate-core:1.5.3') {
        exclude module: 'scala-compiler'  // the scala compiler is already included above via scalaTools, but in the version 2.9.1 which is at least irritating
    }
	compile 'org.fusesource.scalate:scalate-spring-mvc:1.5.3'
	
	// database
	compile 'com.h2database:h2:1.3.166'
	
	// logging
	compile 'ch.qos.logback:logback-classic:1.0.3'

	testCompile 'junit:junit:4.10'
	testCompile 'org.scalatest:scalatest_2.9.2:1.8.RC2'
	

	def tomcatVersion = '7.0.11'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj' // why the heck is a eclipse.jdt.core.compiler included?
    }
}